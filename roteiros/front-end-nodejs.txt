# Configuração inicial de um projeto frontend básico com Nodejs + HTML/CSS/JS
## É necessário criar um servidor node que serve arquivos estáticos com express

1) Configure o projeto git conforme roteiro

2) Rode os seguintes comandos no terminal:
    - npm init -y
    - npm install express cors axios
    - npm install -D typescript @types/node @types/express @types/cors ts-node-dev
        - se não quiser usar typescript, remover da instalação
    - npx tsc --init

3) Configure o tsconfig.json criado
    - mude o target para "es6" ou superior (estamos usando o "es2020")
    - descomente o campo "outDir" e coloque o valor "./dist/"
    - adicione os campos:
        - "include": ["./src/**/*"],
        - "exclude": ["node_modules"]

4) Crie o diretório src na raiz do projeto e adicione seus códigos sempre lá

5) Para iniciar o server express, crie um arquivo na src (ex. "main.ts")
    - no main.ts criado, faça o script que importe express, crie uma instancia dele e chame o método listen
    - no package.json, adicione um script na chave "scripts"
        "dev": "ts-node-dev --respawn --transpile-only ./src/main.ts"
    - inicie o server local rodando o comando: npm run dev
    - no main.ts, cuide para escolher uma porta que não esteja em uso
    - adicione uma callback no método listen que faça um console.log("server iniciou"), assim é possível ter certeza que o servidor iniciou corretamente

6) no main.ts, use o comando:
    - app.use(express.static(__dirname + "/../public"));

7) fora da src, crie um diretório public/ e crie os arquivos HTML, CSS e JS do front lá

8) (não recomendado) se quiser, use o typescript para criar algum código e troque o outDir de dist/ para public/, ou copie o resultado do npx tsc de dist/ para public/

9) (não recomendado) usar o webpack para transpilar typescript com import/export e usar no html

10) Para subir no heroku: siga os passos do deploy do projeto no heroku como se fosse back-end (subir-backend-heroku.txt)
